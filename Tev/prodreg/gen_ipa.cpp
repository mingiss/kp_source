//---------------------------------------- 
// gen.cpp                                
// programos paleidimo diegimo scenarijus 
// prijungimui prie kpstrpd.exe, Pradzia_[...].exe 
//                                        
#include "envir.h"                        
//                                        
#include "stdlib.h"                       
#include "fstream"                        
#include "windows.h"                      
//                                        
#if Compiler != Watcom                    
using namespace std;                      
#endif                                    
//                                        
#include "kpstdlib.h"                     
//                                        
const unsigned char *GenIssArr[] = {      
(const unsigned char *)";------------------------",
(const unsigned char *)"; gen_flash_start.iss",
(const unsigned char *)"; Installation script",
(const unsigned char *)"; IPA_Biologija",
(const unsigned char *)"; \'Á pagalbà abiturientui. Biologija 2000-2009",
(const unsigned char *)";",
(const unsigned char *)"",
(const unsigned char *)"",
(const unsigned char *)"[Setup]",
(const unsigned char *)"AppPublisher=TEV",
(const unsigned char *)"AppPublisherURL=http://www.tev.lt/",
(const unsigned char *)"AppVersion={code:GetVerStr}",
(const unsigned char *)"VersionInfoCompany=TEV",
(const unsigned char *)"",
(const unsigned char *)"AppName={code:GetProdNameStr}",
(const unsigned char *)"AppVerName={code:GetVerNameStr}",
(const unsigned char *)"",
(const unsigned char *)";ProdVer={code:GetProdVerStr}",
(const unsigned char *)"",
(const unsigned char *)"DefaultDirName={tmp}\\{code:GetProdDirStr}",
(const unsigned char *)"",
(const unsigned char *)"DirExistsWarning=no",
(const unsigned char *)"",
(const unsigned char *)"UsePreviousAppDir=no",
(const unsigned char *)"",
(const unsigned char *)"Uninstallable=no",
(const unsigned char *)"",
(const unsigned char *)"PrivilegesRequired=none",
(const unsigned char *)"",
(const unsigned char *)";OutputDir=Output_flash",
(const unsigned char *)"OutputDir=Output_flash_iso",
(const unsigned char *)";OutputDir=IPA_Biologija_v1.22.1_atmintukas\\Output_flash",
(const unsigned char *)";OutputDir=Output_flash_iso\\IPA Biologija 2000-2009",
(const unsigned char *)"",
(const unsigned char *)"OutputBaseFilename=Pradzia_IPA_Biologija",
(const unsigned char *)"",
(const unsigned char *)"",
(const unsigned char *)"[Files]",
(const unsigned char *)"Source: \"{app}\\data\\Mappings\\Adobe\\symbol.txt\"; DestDir: \"{cf}\\Adobe\\TypeSpt\\Unicode\\Mappings\\Adobe\"; Flags: ignoreversion overwritereadonly;",
(const unsigned char *)"Source: \"{app}\\data\\Mappings\\Adobe\\zdingbat.txt\"; DestDir: \"{cf}\\Adobe\\TypeSpt\\Unicode\\Mappings\\Adobe\"; Flags: ignoreversion overwritereadonly;",
(const unsigned char *)"Source: \"{app}\\data\\Mappings\\Mac\\ARABIC.TXT\"; DestDir: \"{cf}\\Adobe\\TypeSpt\\Unicode\\Mappings\\Mac\"; Flags: ignoreversion overwritereadonly;",
(const unsigned char *)"Source: \"{app}\\data\\Mappings\\Mac\\CENTEURO.TXT\"; DestDir: \"{cf}\\Adobe\\TypeSpt\\Unicode\\Mappings\\Mac\"; Flags: ignoreversion overwritereadonly;",
(const unsigned char *)"Source: \"{app}\\data\\Mappings\\Mac\\CHINSIMP.TXT\"; DestDir: \"{cf}\\Adobe\\TypeSpt\\Unicode\\Mappings\\Mac\"; Flags: ignoreversion overwritereadonly;",
(const unsigned char *)"Source: \"{app}\\data\\Mappings\\Mac\\CHINTRAD.TXT\"; DestDir: \"{cf}\\Adobe\\TypeSpt\\Unicode\\Mappings\\Mac\"; Flags: ignoreversion overwritereadonly;",
(const unsigned char *)"Source: \"{app}\\data\\Mappings\\Mac\\CORPCHAR.TXT\"; DestDir: \"{cf}\\Adobe\\TypeSpt\\Unicode\\Mappings\\Mac\"; Flags: ignoreversion overwritereadonly;",
(const unsigned char *)"Source: \"{app}\\data\\Mappings\\Mac\\CROATIAN.TXT\"; DestDir: \"{cf}\\Adobe\\TypeSpt\\Unicode\\Mappings\\Mac\"; Flags: ignoreversion overwritereadonly;",
(const unsigned char *)"Source: \"{app}\\data\\Mappings\\Mac\\CYRILLIC.TXT\"; DestDir: \"{cf}\\Adobe\\TypeSpt\\Unicode\\Mappings\\Mac\"; Flags: ignoreversion overwritereadonly;",
(const unsigned char *)"Source: \"{app}\\data\\Mappings\\Mac\\FARSI.TXT\"; DestDir: \"{cf}\\Adobe\\TypeSpt\\Unicode\\Mappings\\Mac\"; Flags: ignoreversion overwritereadonly;",
(const unsigned char *)"Source: \"{app}\\data\\Mappings\\Mac\\GREEK.TXT\"; DestDir: \"{cf}\\Adobe\\TypeSpt\\Unicode\\Mappings\\Mac\"; Flags: ignoreversion overwritereadonly;",
(const unsigned char *)"Source: \"{app}\\data\\Mappings\\Mac\\HEBREW.TXT\"; DestDir: \"{cf}\\Adobe\\TypeSpt\\Unicode\\Mappings\\Mac\"; Flags: ignoreversion overwritereadonly;",
(const unsigned char *)"Source: \"{app}\\data\\Mappings\\Mac\\ICELAND.TXT\"; DestDir: \"{cf}\\Adobe\\TypeSpt\\Unicode\\Mappings\\Mac\"; Flags: ignoreversion overwritereadonly;",
(const unsigned char *)"Source: \"{app}\\data\\Mappings\\Mac\\JAPANESE.TXT\"; DestDir: \"{cf}\\Adobe\\TypeSpt\\Unicode\\Mappings\\Mac\"; Flags: ignoreversion overwritereadonly;",
(const unsigned char *)"Source: \"{app}\\data\\Mappings\\Mac\\KOREAN.TXT\"; DestDir: \"{cf}\\Adobe\\TypeSpt\\Unicode\\Mappings\\Mac\"; Flags: ignoreversion overwritereadonly;",
(const unsigned char *)"Source: \"{app}\\data\\Mappings\\Mac\\ROMAN.TXT\"; DestDir: \"{cf}\\Adobe\\TypeSpt\\Unicode\\Mappings\\Mac\"; Flags: ignoreversion overwritereadonly;",
(const unsigned char *)"Source: \"{app}\\data\\Mappings\\Mac\\ROMANIAN.TXT\"; DestDir: \"{cf}\\Adobe\\TypeSpt\\Unicode\\Mappings\\Mac\"; Flags: ignoreversion overwritereadonly;",
(const unsigned char *)"Source: \"{app}\\data\\Mappings\\Mac\\SYMBOL.TXT\"; DestDir: \"{cf}\\Adobe\\TypeSpt\\Unicode\\Mappings\\Mac\"; Flags: ignoreversion overwritereadonly;",
(const unsigned char *)"Source: \"{app}\\data\\Mappings\\Mac\\THAI.TXT\"; DestDir: \"{cf}\\Adobe\\TypeSpt\\Unicode\\Mappings\\Mac\"; Flags: ignoreversion overwritereadonly;",
(const unsigned char *)"Source: \"{app}\\data\\Mappings\\Mac\\TURKISH.TXT\"; DestDir: \"{cf}\\Adobe\\TypeSpt\\Unicode\\Mappings\\Mac\"; Flags: ignoreversion overwritereadonly;",
(const unsigned char *)"Source: \"{app}\\data\\Mappings\\Mac\\UKRAINE.TXT\"; DestDir: \"{cf}\\Adobe\\TypeSpt\\Unicode\\Mappings\\Mac\"; Flags: ignoreversion overwritereadonly;",
(const unsigned char *)"Source: \"{app}\\data\\Mappings\\Win\\CP1250.TXT\"; DestDir: \"{cf}\\Adobe\\TypeSpt\\Unicode\\Mappings\\Win\"; Flags: ignoreversion overwritereadonly;",
(const unsigned char *)"Source: \"{app}\\data\\Mappings\\Win\\CP1251.TXT\"; DestDir: \"{cf}\\Adobe\\TypeSpt\\Unicode\\Mappings\\Win\"; Flags: ignoreversion overwritereadonly;",
(const unsigned char *)"Source: \"{app}\\data\\Mappings\\Win\\CP1252.TXT\"; DestDir: \"{cf}\\Adobe\\TypeSpt\\Unicode\\Mappings\\Win\"; Flags: ignoreversion overwritereadonly;",
(const unsigned char *)"Source: \"{app}\\data\\Mappings\\Win\\CP1253.TXT\"; DestDir: \"{cf}\\Adobe\\TypeSpt\\Unicode\\Mappings\\Win\"; Flags: ignoreversion overwritereadonly;",
(const unsigned char *)"Source: \"{app}\\data\\Mappings\\Win\\CP1254.TXT\"; DestDir: \"{cf}\\Adobe\\TypeSpt\\Unicode\\Mappings\\Win\"; Flags: ignoreversion overwritereadonly;",
(const unsigned char *)"Source: \"{app}\\data\\Mappings\\Win\\CP1255.TXT\"; DestDir: \"{cf}\\Adobe\\TypeSpt\\Unicode\\Mappings\\Win\"; Flags: ignoreversion overwritereadonly;",
(const unsigned char *)"Source: \"{app}\\data\\Mappings\\Win\\CP1256.TXT\"; DestDir: \"{cf}\\Adobe\\TypeSpt\\Unicode\\Mappings\\Win\"; Flags: ignoreversion overwritereadonly;",
(const unsigned char *)"Source: \"{app}\\data\\Mappings\\Win\\CP1257.TXT\"; DestDir: \"{cf}\\Adobe\\TypeSpt\\Unicode\\Mappings\\Win\"; Flags: ignoreversion overwritereadonly;",
(const unsigned char *)"Source: \"{app}\\data\\Mappings\\Win\\CP1258.TXT\"; DestDir: \"{cf}\\Adobe\\TypeSpt\\Unicode\\Mappings\\Win\"; Flags: ignoreversion overwritereadonly;",
(const unsigned char *)"Source: \"{app}\\data\\Mappings\\Win\\CP874.TXT\"; DestDir: \"{cf}\\Adobe\\TypeSpt\\Unicode\\Mappings\\Win\"; Flags: ignoreversion overwritereadonly;",
(const unsigned char *)"Source: \"{app}\\data\\Mappings\\Win\\CP932.TXT\"; DestDir: \"{cf}\\Adobe\\TypeSpt\\Unicode\\Mappings\\Win\"; Flags: ignoreversion overwritereadonly;",
(const unsigned char *)"Source: \"{app}\\data\\Mappings\\Win\\CP936.TXT\"; DestDir: \"{cf}\\Adobe\\TypeSpt\\Unicode\\Mappings\\Win\"; Flags: ignoreversion overwritereadonly;",
(const unsigned char *)"Source: \"{app}\\data\\Mappings\\Win\\CP949.TXT\"; DestDir: \"{cf}\\Adobe\\TypeSpt\\Unicode\\Mappings\\Win\"; Flags: ignoreversion overwritereadonly;",
(const unsigned char *)"Source: \"{app}\\data\\Mappings\\Win\\CP950.TXT\"; DestDir: \"{cf}\\Adobe\\TypeSpt\\Unicode\\Mappings\\Win\"; Flags: ignoreversion overwritereadonly;",
(const unsigned char *)"",
(const unsigned char *)"",
(const unsigned char *)"[Code]",
(const unsigned char *)"",
(const unsigned char *)"var",
(const unsigned char *)"   bFinishedInstall: Boolean;",
(const unsigned char *)"",
(const unsigned char *)"",
(const unsigned char *)"function GetProdVer: String;",
(const unsigned char *)"begin",
(const unsigned char *)"Result:=\'57014\';",
(const unsigned char *)"end;",
(const unsigned char *)"",
(const unsigned char *)"",
(const unsigned char *)"function GetProdVerStr(Param: String): String;",
(const unsigned char *)"begin",
(const unsigned char *)"Result:=GetProdVer;",
(const unsigned char *)"end;",
(const unsigned char *)"",
(const unsigned char *)"",
(const unsigned char *)"function GetVer: String;",
(const unsigned char *)"begin",
(const unsigned char *)"Result:=\'v1.22.1\';",
(const unsigned char *)"end;",
(const unsigned char *)"",
(const unsigned char *)"",
(const unsigned char *)"function GetVerStr(Param: String): String;",
(const unsigned char *)"begin",
(const unsigned char *)"Result:=GetVer;",
(const unsigned char *)"end;",
(const unsigned char *)"",
(const unsigned char *)"",
(const unsigned char *)"function GetFirstVer: String;",
(const unsigned char *)"begin",
(const unsigned char *)"Result:=\'v1.22\';",
(const unsigned char *)"end;",
(const unsigned char *)"",
(const unsigned char *)"",
(const unsigned char *)"function ShouldSkipPage(PageID: Integer): Boolean;",
(const unsigned char *)"begin",
(const unsigned char *)"   Result := True;",
(const unsigned char *)"end;",
(const unsigned char *)"",
(const unsigned char *)"",
(const unsigned char *)"function GetProdNameRaw: String;",
(const unsigned char *)"begin",
(const unsigned char *)"Result:=\'Á pagalbà abiturientui. Biologija 2000-2009\';",
(const unsigned char *)"end;",
(const unsigned char *)"",
(const unsigned char *)"",
(const unsigned char *)"function GetProdName: String;",
(const unsigned char *)"begin",
(const unsigned char *)"Result:=GetProdNameRaw;",
(const unsigned char *)"end;",
(const unsigned char *)"",
(const unsigned char *)"",
(const unsigned char *)"function GetProdNameStr(Param: String): String;",
(const unsigned char *)"begin",
(const unsigned char *)"Result:=GetProdName;",
(const unsigned char *)"end;",
(const unsigned char *)"",
(const unsigned char *)"",
(const unsigned char *)"function GetVerName: String;",
(const unsigned char *)"begin",
(const unsigned char *)"Result:=GetProdNameRaw + \' \' + GetVer;",
(const unsigned char *)"end;",
(const unsigned char *)"",
(const unsigned char *)"",
(const unsigned char *)"function GetVerNameStr(Param: String): String;",
(const unsigned char *)"begin",
(const unsigned char *)"Result:=GetVerName;",
(const unsigned char *)"end;",
(const unsigned char *)"",
(const unsigned char *)"",
(const unsigned char *)"function GetProdFNameRaw: String;",
(const unsigned char *)"var retv: String;",
(const unsigned char *)"begin",
(const unsigned char *)"",
(const unsigned char *)"   retv := \'IPA Biologija 2000-2009\';",
(const unsigned char *)"",
(const unsigned char *)"Result := retv;",
(const unsigned char *)"end;",
(const unsigned char *)"",
(const unsigned char *)"",
(const unsigned char *)"function GetProdFName: String;",
(const unsigned char *)"begin",
(const unsigned char *)"Result:=GetProdFNameRaw;",
(const unsigned char *)"end;",
(const unsigned char *)"",
(const unsigned char *)"",
(const unsigned char *)"function GetProdFNameStr(Param: String): String;",
(const unsigned char *)"begin",
(const unsigned char *)"Result:=GetProdFName;",
(const unsigned char *)"end;",
(const unsigned char *)"",
(const unsigned char *)"",
(const unsigned char *)"function GetProdDir: String;",
(const unsigned char *)"var retv: String;",
(const unsigned char *)"begin",
(const unsigned char *)"",
(const unsigned char *)"   retv := \'\';",
(const unsigned char *)"   retv := retv + GetProdFNameRaw;",
(const unsigned char *)"",
(const unsigned char *)"Result := retv;",
(const unsigned char *)"end;",
(const unsigned char *)"",
(const unsigned char *)"",
(const unsigned char *)"function GetProdDirStr(Param: String): String;",
(const unsigned char *)"begin",
(const unsigned char *)"Result:=GetProdDir;",
(const unsigned char *)"end;",
(const unsigned char *)"",
(const unsigned char *)"",
(const unsigned char *)"function GetProdGroup: String;",
(const unsigned char *)"var retv: String;",
(const unsigned char *)"begin",
(const unsigned char *)"",
(const unsigned char *)"   retv := \'TEV\\\';",
(const unsigned char *)"   retv := retv + GetProdFNameRaw;",
(const unsigned char *)"",
(const unsigned char *)"Result := retv;",
(const unsigned char *)"end;",
(const unsigned char *)"",
(const unsigned char *)"",
(const unsigned char *)"function GetProdGroupStr(Param: String): String;",
(const unsigned char *)"begin",
(const unsigned char *)"Result:=GetProdGroup;",
(const unsigned char *)"end;",
(const unsigned char *)"",
(const unsigned char *)"",
(const unsigned char *)"function GetExeFName: String;",
(const unsigned char *)"begin",
(const unsigned char *)"Result:=\'ipab\';",
(const unsigned char *)"end;",
(const unsigned char *)"",
(const unsigned char *)"",
(const unsigned char *)"function GetExeFNameStr(Param: String): String;",
(const unsigned char *)"begin",
(const unsigned char *)"Result:=GetExeFName;",
(const unsigned char *)"end;",
(const unsigned char *)"",
(const unsigned char *)"",
(const unsigned char *)"function GetIconFNameStr(Param: String): String;",
(const unsigned char *)"begin",
(const unsigned char *)"Result:=\'ipa.ico\';",
(const unsigned char *)"end;",
(const unsigned char *)"",
(const unsigned char *)"",
(const unsigned char *)"function GetUpdNum: Integer;",
(const unsigned char *)"begin",
(const unsigned char *)"Result:=1;",
(const unsigned char *)"end;",
(const unsigned char *)"",
(const unsigned char *)"",
(const unsigned char *)"function GetAppPath: String;",
(const unsigned char *)"begin",
(const unsigned char *)"// Result:=ExpandConstant(\'{src}\\\' + GetProdDir);",
(const unsigned char *)"   Result:=ExpandConstant(\'{src}\');",
(const unsigned char *)"end;",
(const unsigned char *)"",
(const unsigned char *)"",
(const unsigned char *)"procedure CurStepChanged(CurStep: TSetupStep);",
(const unsigned char *)"begin",
(const unsigned char *)"   if CurStep = ssPostInstall then",
(const unsigned char *)"      bFinishedInstall := True;",
(const unsigned char *)"end;",
(const unsigned char *)"",
(const unsigned char *)"",
(const unsigned char *)"procedure RunExe;",
(const unsigned char *)"var retv: Integer;",
(const unsigned char *)"begin",
(const unsigned char *)"   if(Not Exec(GetAppPath + \'\\\' + GetExeFName + \'.exe\', \'\', GetAppPath, SW_SHOW, ewNoWait, retv)) then",
(const unsigned char *)"   begin",
(const unsigned char *)"      MsgBox(\'Nepavyko paleisti failo \' + GetExeFName + \'.exe\', mbError, MB_OK);",
(const unsigned char *)"   end;",
(const unsigned char *)"end;",
(const unsigned char *)"",
(const unsigned char *)"",
(const unsigned char *)"function InitializeSetup: Boolean;",
(const unsigned char *)"var retv: Integer;",
(const unsigned char *)"var retw: Boolean;",
(const unsigned char *)"begin",
(const unsigned char *)"",
(const unsigned char *)"   bFinishedInstall := False;",
(const unsigned char *)"",
(const unsigned char *)"   retw:=True; // dll-ø/failø/fontø, tur but, dar nëra - paleisti pilnà paleidimà",
(const unsigned char *)"",
(const unsigned char *)"   if(",
(const unsigned char *)"      FileExists(ExpandConstant(\'{cf}\\Adobe\\TypeSpt\\Unicode\\Mappings\\Adobe\\symbol.txt\'))",
(const unsigned char *)"     ) then",
(const unsigned char *)"   begin",
(const unsigned char *)"",
(const unsigned char *)"// dll-ai/fontai jau yra, viskà darom jau èia",
(const unsigned char *)"",
(const unsigned char *)"",
(const unsigned char *)"      RunExe;",
(const unsigned char *)"",
(const unsigned char *)"      retw:=False; // atsakymas neigiamas, kad nerodytø jokiø tolesniø dialogø, iðkart pasibaigtø",
(const unsigned char *)"   end",
(const unsigned char *)"   else",
(const unsigned char *)"   begin",
(const unsigned char *)"      if not RegWriteDWordValue(HKEY_LOCAL_MACHINE, \'Software\\TEV\\\' + GetProdVer, \'Installed\', 0) then",
(const unsigned char *)"      begin",
(const unsigned char *)"         MsgBox(\'Programos paleidimui pirmà kartà reikalingos administratoriaus teisës\', mbCriticalError, MB_OK);",
(const unsigned char *)"         retw := False;",
(const unsigned char *)"      end;",
(const unsigned char *)"   end;",
(const unsigned char *)"",
(const unsigned char *)"Result:=retw;",
(const unsigned char *)"end;",
(const unsigned char *)"",
(const unsigned char *)"",
(const unsigned char *)"procedure DeinitializeSetup();",
(const unsigned char *)"var retv: Integer;",
(const unsigned char *)"begin",
(const unsigned char *)"",
(const unsigned char *)"   if bFinishedInstall then",
(const unsigned char *)"   begin",
(const unsigned char *)"",
(const unsigned char *)"",
(const unsigned char *)"      RunExe;",
(const unsigned char *)"",
(const unsigned char *)"   end;",
(const unsigned char *)"end;",
NULL                                      
};                                        
